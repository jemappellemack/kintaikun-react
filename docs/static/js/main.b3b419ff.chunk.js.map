{"version":3,"sources":["components/Navigation.tsx","pages/Home.tsx","components/Clock.tsx","store/KintaiCalendarStore.ts","pages/Timestamp.tsx","components/KintaiApplyModal.tsx","pages/Works.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","Navbar","bg","variant","Brand","Nav","style","marginLeft","color","to","Home","Row","marginTop","id","title","linkTo","map","menu","Col","marginBottom","Card","width","Body","Title","Text","className","Clock","useState","Date","now","setNow","useEffect","intervalId","setInterval","clearInterval","format","dateArray","currentDate","start","startOfMonth","subMonths","end","endOfMonth","addMonths","eachDayOfInterval","date","dateString","year","month","day","week","startString","endString","status","startAt","endAt","duration","days","hours","minutes","months","seconds","years","createCalender","dateObj","reduce","result","current","KintaiCalendarStore","Store","Timestamp","today","s","update","intervalToDuration","hidden","toString","padStart","Button","onClick","disabled","KintaiApplyModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","selectdate","Footer","onHide","onClickApply","fetchCalendar","Works","targetDate","setTargetDate","calendars","showBackButton","setShowBackButton","showNextButton","setShowNextButton","modalShow","setModalShow","selectDate","setSelectDate","difference","differenceInCalendarMonths","tableElement","document","getElementById","wb","XLSX","table_to_book","wbout","bookType","bookSST","type","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","fileName","saveAs","Blob","block","Table","bordered","store","on","openModal","show","App","Container","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b3b419ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return(\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>勤怠くん</Navbar.Brand>\n        <Nav>\n          <Link style={{ marginLeft: '1rem', color: 'white' }} to=\"/timestamp\">打刻</Link>\n          <Link style={{ marginLeft: '1rem', color: 'white' }} to=\"/works\">一覧</Link>\n        </Nav>\n      </Navbar>\n    </>\n  )\n}\nexport default Navigation;","import React from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction Home() {\n  const menuList = [\n    {\n      id: '001',\n      title: '打刻',\n      linkTo:'/timestamp'\n    },\n    {\n      id: '002',\n      title: '一覧',\n      linkTo:'/works'\n    }\n  ];\n\n  return (\n    <>\n      <Row style={{ marginTop: '2rem' }}>\n       {menuList.map((menu) => (\n        <Col style={{ marginBottom: '1rem' }}>\n          <Card style={{ width: '18rem' }}>\n            <Card.Body key={menu.id}>\n             <Card.Title>{menu.title}</Card.Title>\n              <Card.Text></Card.Text>\n              <Link className=\"btn btn-primary\" to={menu.linkTo}>選択</Link>\n            </Card.Body>\n          </Card>\n        </Col>\n       ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport format from 'date-fns/format';\n\nfunction Clock() {\n  const [ now, setNow ] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => setNow(new Date()), 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [now]);\n\n  return (\n    <>{format(now, 'H:mm:ss')}</>\n  );\n}\n\nexport default Clock;","import { Store } from 'pullstate';\nimport format from 'date-fns/format';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport subMonths from 'date-fns/subMonths';\nimport addMonths from 'date-fns/addMonths';\n\nexport interface IKintaiCalendar {\n  date:Date,\n  dateString: string,\n  year: string,\n  month: string,\n  day: string,\n  week: string,\n  startString: string;\n  endString: string;\n  status: string;\n  startAt: Date|null;\n  endAt: Date|null;\n  duration: Duration;\n}\n\ninterface IKintaiCalendarStore {\n  [key:string]: IKintaiCalendar\n}\n\nconst createCalender = (currentDate: Date) => {\n  const start = new Date(startOfMonth(subMonths(currentDate, 1)));\n  const end = new Date(endOfMonth(addMonths(currentDate, 1)));\n  const dateArray: IKintaiCalendar[] = eachDayOfInterval({ start, end }).map(date => {\n    return {\n      date,\n      dateString: format(date,'yyyy-MM-dd'),\n      year: format(date, 'yyyy'),\n      month: format(date, 'MM'),\n      day: format(date, 'dd'),\n      week: format(date, 'EEEEEE'),\n      startString:'',\n      endString: '',\n      status: '',\n      startAt: null,\n      endAt: null,\n      duration: {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        months: 0,\n        seconds: 0,\n        years: 0\n      }\n    };\n  });\n  return dateArray;\n}\n\nconst convertArrayToObject = (arr:IKintaiCalendar[]) => {\n  const obj = arr.reduce((result:any, current) => {\n    result[current.dateString] = current;\n    return result;\n  }, {});\n  return obj;\n}\n\nconst dateArray = createCalender(new Date());\nconst dateObj = convertArrayToObject(dateArray);\n\nexport const KintaiCalendarStore = new Store<IKintaiCalendarStore>(dateObj);\n","import React, { useEffect } from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Clock from '../components/Clock';\nimport { KintaiCalendarStore } from '../store/KintaiCalendarStore';\nimport format from 'date-fns/format';\nimport intervalToDuration from 'date-fns/intervalToDuration';\n\nfunction Timestamp() {\n  const today: string = format(new Date(),'yyyy-MM-dd');\n  const { startAt, endAt, duration } = KintaiCalendarStore.useState((s) => s[today], [today]);\n\n  const onClickStartTime = () : void => {\n    KintaiCalendarStore.update(s => {\n      s[today].startAt = new Date();\n      s[today].startString = format(new Date(), 'H:mm');\n    });\n  };\n\n  const onClickEndTime = () : void => {\n    KintaiCalendarStore.update(s => {\n      s[today].endAt = new Date();\n      s[today].endString = format(new Date(), 'H:mm');\n    });\n  };\n\n  useEffect(() => {\n    if (!startAt || !endAt) return;\n    KintaiCalendarStore.update(s => {\n      s[today].duration = intervalToDuration({ start: startAt, end: endAt });\n    });\n  });\n\n  return (\n    <>\n      <Row>\n        <Col></Col>\n        <Col style={{ marginTop: '4rem' }}>\n          <Card className=\"text-center\" style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title style={{ marginBottom: '1rem' }}>{format(new Date(), 'y年M月dd日')}</Card.Title>\n              <h1 style={{ marginBottom: '2rem' }}><Clock/></h1>\n              <Card.Text hidden={ startAt ? false : true } style={{ marginBottom: '1rem' }}>出 勤 { startAt ? format(startAt, 'H:mm') : null }</Card.Text>\n              <Card.Text hidden={ endAt ? false : true } style={{ marginBottom: '1rem' }}>退 勤 { endAt ? format(endAt, 'H:mm') : null }</Card.Text>\n              <Card.Text hidden={ endAt ? false : true } style={{ marginBottom: '3rem' }}>時 間 {`${duration.hours}:${duration.minutes?.toString().padStart(2,'0')}`}</Card.Text>\n              <Button variant=\"primary\" onClick={onClickStartTime} disabled={ startAt ? true : false} >出勤</Button>\n              <Button variant=\"primary\" style={{ marginLeft: '1rem' }} onClick={onClickEndTime} disabled={( startAt ? false : true ) || ( endAt ? true : false )}>退勤</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Timestamp;","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { KintaiCalendarStore } from '../store/KintaiCalendarStore';\n\nconst onClickApply = (props: any) : void => {\n  KintaiCalendarStore.update(s => {\n    s[props.selectdate.dateString].status = 'applying';\n  });\n  return props.onHide();\n};\n\nfunction KintaiApplyModal(props:any) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          承認申請\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>承認申請しますか？</h4>\n        <p>\n          {props.selectdate.dateString}\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n      <Button variant=\"light\" onClick={props.onHide}>キャンセル</Button>\n      <Button variant=\"success\" onClick={() => onClickApply(props)}>申請する</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default KintaiApplyModal;","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Row, Table } from 'react-bootstrap';\nimport KintaiApplyModal from '../components/KintaiApplyModal';\nimport { InjectStoreState  } from 'pullstate';\nimport { KintaiCalendarStore } from '../store/KintaiCalendarStore';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport format from 'date-fns/format';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths'; \nimport differenceInCalendarMonths from 'date-fns/differenceInCalendarMonths';\n\nfunction fetchCalendar(currentDate: Date) {\n  const start = startOfMonth(currentDate);\n  const end = endOfMonth(currentDate);\n  const dates = eachDayOfInterval({ start, end });\n  const dateArray = dates.map(date => {\n    return {\n      date,\n      year: format(date, 'yyyy'),\n      month: format(date, 'MM'),\n      day: format(date, 'dd'),\n      week: format(date, 'EEEEEE'),\n      dateString: format(date,'yyyy-MM-dd'),\n    };\n  });\n  return dateArray;\n}\n\nfunction Works(){\n  const [ targetDate, setTargetDate ] = useState(new Date());\n  let calendars = fetchCalendar(targetDate);\n\n  const [ showBackButton, setShowBackButton ] = useState(false);\n  const [ showNextButton, setShowNextButton ] = useState(true);\n\n  const goBackMonth = () => {\n    setTargetDate(currentDate => subMonths(currentDate, 1));\n  }\n\n  const goNextMonth = () => {\n    setTargetDate(currentDate => addMonths(currentDate, 1));\n  }\n\n  const [ modalShow, setModalShow ] = useState(false);\n  const [ selectDate, setSelectDate ] = useState({\n    date: null,\n    year: '',\n    month: '',\n    day: '',\n    week: '',\n    dateString: ''\n  });\n\n  const openModal = (date:any) => {\n    setSelectDate(date);\n    setModalShow(true);\n  }\n\n  const tableToExcel = () => {\n    const tableName = 'kintaitable';\n    const tableElement = document.getElementById(tableName);\n    const wb = XLSX.utils.table_to_book(tableElement);\n    const wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });\n    const buf = new ArrayBuffer(wbout.length);\n    const view = new Uint8Array(buf);\n    for (let i = 0; i !== wbout.length; ++i) {\n      view[i] = wbout.charCodeAt(i) & 0xFF;\n    }\n    const fileName = format(targetDate, 'y年M月度勤怠');\n    saveAs(new Blob([buf], { type: 'application/octet-stream' }), `${fileName}.xlsx`);\n  }\n  \n  useEffect(() => {\n    if(!targetDate) return;\n    calendars = fetchCalendar(targetDate);\n    \n    const difference = differenceInCalendarMonths(targetDate, new Date());\n    if (difference < 0) {\n      setShowBackButton(false);\n    } else {\n      setShowBackButton(true);\n    }\n\n    if (difference > 0) {\n      setShowNextButton(false);\n    } else {\n      setShowNextButton(true);\n    }\n  });\n\n  return(\n    <>\n      <Row style={{ marginTop: '2rem' }} className=\"text-right\">\n        <Col><Button variant=\"primary\" onClick={tableToExcel}>ダウンロード</Button></Col>\n      </Row>\n      <Row style={{ marginTop: '2rem' }} className=\"text-center\">\n        <Col>{showBackButton ? <Button variant=\"light\" onClick={goBackMonth} block>前月へ</Button> : null}</Col>\n        <Col><h4>{format(targetDate, 'y年M月度')}</h4></Col>\n        <Col>{showNextButton ? <Button variant=\"light\" onClick={goNextMonth} block>翌月へ</Button> : null}</Col>\n      </Row>\n      <Row style={{ marginTop: '2rem' }}>\n        <Col>\n          <Table bordered id=\"kintaitable\">\n            <thead className=\"text-center\">\n              <tr>\n                <th>{format(targetDate, 'y年M月度')}</th>\n                <th>勤務区分</th>\n                <th>出勤時刻</th>\n                <th>退勤時刻</th>\n                <th>稼働時間</th>\n                <th>休憩時間</th>\n                <th>承認申請</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-center\">\n              {calendars.map((date) => (\n              <tr key={date.dateString}>\n                <td><p style={{color: (date.week === 'Sa' ? 'blue': '') || (date.week === 'Su' ? 'red': '')}}>{date.day}</p><p style={{color: (date.week === 'Sa' ? 'blue': '') || (date.week === 'Su' ? 'red': '')}}>{date.week}</p></td>\n                <td>{date.week === 'Sa' || date.week === 'Su' ?　'休日'　: '稼働' }</td>\n                <td>\n                  <InjectStoreState store={KintaiCalendarStore} on={s => s[date.dateString].startString}>{startString => <span>{startString}</span>}</InjectStoreState>\n                </td>\n                <td>\n                  <InjectStoreState store={KintaiCalendarStore} on={s => s[date.dateString].endString}>{endString => <span>{endString}</span>}</InjectStoreState>\n                </td>\n                <td>\n                  <InjectStoreState store={KintaiCalendarStore} on={s => s[date.dateString].duration}>{duration => <span>{duration.hours}:{duration.minutes?.toString().padStart(2,'0')}</span>}</InjectStoreState>\n                </td>\n                <td>{date.week === 'Sa' || date.week === 'Su' ? '0:00' : '1:00' }</td>\n                <td>\n                  <InjectStoreState store={KintaiCalendarStore} on={s => s[date.dateString].status}>{status => <span>{status === 'applying' ? '申請中' : <Button size=\"sm\" variant=\"primary\" onClick={() => openModal(date)}>申請</Button>}</span>}</InjectStoreState>\n                </td>\n              </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n      <KintaiApplyModal\n        selectdate={selectDate}\n        show={modalShow}\n        onHide={()=>setModalShow(false)}\n      />\n    </>\n  )\n}\n\nexport default Works;","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Timestamp from './pages/Timestamp';\nimport Works from './pages/Works';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navigation/>\n        <Container>\n          <Switch>\n            <Route path='/home' component={Home}/>\n            <Route path='/timestamp' component={Timestamp}/>\n            <Route path='/works' component={Works}/>\n            <Route component={Home}/>\n          </Switch>\n        </Container>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}